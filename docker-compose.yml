version: "3.7"

services:

  postgres14:
    container_name: postgres14
    image: postgres:14.6
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /var/lib/postgresql/data
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./sql/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6.15
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@linuxhint.com
      PGADMIN_DEFAULT_PASSWORD: secret
      # host name/address: host.docker.internal
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8800:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      postgres14:
        condition: service_healthy

  app:
    container_name: sml-demo
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      - "DB_HOST=postgres14"
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=secret"
      - "SERVER_PORT=8080"
    ports:
      - "8080:8080"
    depends_on:
      - postgres14
    restart: always

volumes:
  db-data:
  pgadmin-data:
